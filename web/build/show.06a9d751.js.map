{"version":3,"sources":["webpack:///./assets/js/show-pg/entity-show-data.js","webpack:///./node_modules/core-js/modules/es.string.repeat.js","webpack:///./assets/js/util/util-main.js","webpack:///./assets/js/show-pg/entity-show.js","webpack:///./assets/js/util/elems/elems-main.js"],"names":["util","getEntityShowData","entity","data","u","location","confg","interaction","section","rows","field","content","interactionType","displayName","getTagData","tags","getTaxonHierarchyDataHtml","subject","object","note","source","citation","citationType","classes","doi","getContributorFieldData","contributors","description","latitude","toString","longitude","country","region","habitatType","getElevRange","map","c","length","t","join","taxon","getParentTaxaNames","pTaxon","lvl","indent","repeat","String","fromCharCode","isRoot","parentTaxon","contribs","Object","keys","type","names","ord","ucfirst","elevationMax","elevation","$","target","proto","getDiv","elems","arguments","getElem","getLabel","str","charAt","toUpperCase","slice","sections","url","buildDataSection","title","getSectionRow","filter","r","hdr","text","getDivWithContent","replace","row","i","cnt","rowCells","getRowCell","cell","getDataCell","dir","pop","colCells","label","fieldHTML","lbl","buildDataCell","id","div","class","html","append","require","split","splice","s","removeAttr","attrs","assign","tag","elem","document","createElement","transProps","forEach","orgProp","addElemProps","attrsToAdd","prop","attr","addAttrProps","addAttributes"],"mappings":"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","file":"show.06a9d751.js","sourcesContent":["/**\n * Returns an Array with the entity's data seperated into sections, rows, and \n * cells for each field with it's data formatted for display.\n * Eg: [{ section: 'name', rows: [ row1-[ cell1-[ { field: 'name', content: data } ], cell... ], row... ]}, { section2 }] \n * \n * TOC:\n *    ENTITY-SHOW CONFG\n *    FIELD-DATA HANDLERS\n */\n let util;\n/* =================== ENTITY-SHOW CONFIG =================================== */\nexport default function getEntityShowData (entity, data, u) {\n    util = u;\n    const confg = {\n        interaction: [\n            {\n                section:  'Interaction Details', \n                rows: [\n                   [  //row 1\n                        [ //cell 1\n                            { field: 'Type', content: data.interactionType.displayName },\n                            { field: 'Tag', content: getTagData(data.tags) },\n                            'col' //flex direction for multiple fields in single cell\n                        ],[  //cell 2\n                            { field: 'Subject', content: getTaxonHierarchyDataHtml(data.subject) }\n                        ],[  //cell 3\n                            { field: 'Object', content: getTaxonHierarchyDataHtml(data.object) }\n                        ], \n                    ], [ //row 2\n                        [  //cell 1\n                            { field: 'Note', content: data.note }\n                        ]\n                    ]\n                ]\n            },{\n                section:  'Source', \n                rows: [\n                   [  //row 1\n                        [ \n                            { field: 'Publication Type', content: data.source.citation.citationType.displayName, classes: 'max-cntnt' },\n                            { field: 'DOI', content: data.source.doi },\n                            { field: 'Website', content: null },\n                            'col'\n                        ], [\n                            getContributorFieldData(data.source.contributors)\n                        ], [\n                            { field: 'Citation', content: data.source.description },\n                        ]\n                    ], [\n                        [\n                            { field: 'Abstract', content: data.source.citation.abstract }\n                        ]\n                    ] \n                            // { field: 'Publication', content: data.source.parent.displayName },\n                            // { field: 'Publisher', content: getPublisherData(data.source.parent.parent) },\n                            // { field: 'Description', content: data.source.parent.description },\n                            // { field: 'Year', content: data.source.parent.year },\n                            // { field: 'DOI', content: data.source.parent.doi },\n                            // { field: 'Website', content: null },\n                            // getCitationTypeAndTitleFieldData(data.source.citation)\n                            // { field: 'Year', content: data.source.year },\n                            // { field: 'Pages', content: data.source.citation.publicationPages },\n                            // { field: 'Volume', content: data.source.citation.publicationVolume },\n                            // { field: 'Issue', content: data.source.citation.publicationIssue },\n                ]\n            },{\n                section:  'Location', \n                rows: [\n                   [  //row 1\n                        [ \n                            { field: 'Name', content: data.location.displayName },\n                            { field: 'Coordinates', content: getCoordinates(data.location), classes: 'max-cntnt'},\n                            'col'\n                        ], [\n                            { field: 'Country', content: data.location.country.displayName },\n                            { field: 'Region', content: data.location.region.displayName, classes: 'max-cntnt' },\n                            'col'\n                        ], [\n                            { field: 'Habitat', content: data.location.habitatType.displayName },\n                            { field: 'Elevation(m)', content: getElevRange(data.location) },\n                            'col'\n                        ], [\n                            { field: 'Description', content: data.location.description },\n                        ]\n                    ]\n                ]\n            }\n        ]\n    };\n    util = null;\n    return confg[entity].map(c => c); //detach obj\n}\n/* ================== FIELD-DATA HANDLERS =================================== */\nfunction getTagData (tags) { \n    if (!tags.length) { return null; }\n    return tags.map(t => t.displayName).join(', ');\n}\n/* ------------------------------- TAXON ------------------------------------ */\nfunction getTaxonHierarchyDataHtml (taxon) { \n    return `<strong>${taxon.displayName}</strong>` + getParentTaxaNames(taxon.parentTaxon);\n}\nfunction getParentTaxaNames (pTaxon, lvl = 1) {\n    const indent = '&emsp;'.repeat(lvl);\n    return `<br>${indent}${String.fromCharCode(8627)}&nbsp${pTaxon.displayName}`\n        + (pTaxon.isRoot ? '' : getParentTaxaNames(pTaxon.parentTaxon, ++lvl));\n}\n/* ---------------------------- SOURCE -------------------------------------- */\nfunction getContributorFieldData (contribs) {\n    if (!contribs || !Object.keys(contribs).length) { return null; }\n    let type;\n    const names = Object.keys(contribs).map(storeTypeAndReturnName).join(\"<br>\");\n    return { field: util.ucfirst(type)+'s', content: names, classes: 'max-cntnt' };\n    \n    function storeTypeAndReturnName (ord) {\n        type = Object.keys(contribs[ord])[0]; \n        return contribs[ord][type];\n    }\n}\nfunction getPublisherData (pSrc) {\n    if (!pSrc) { return null; } \n    const loc = [pSrc.publisher.city, pSrc.publisher.country].filter(c => c).join(', '); \n    return pSrc.displayName + (!!loc ? ('<br>' + loc) : '');\n}\nfunction getCitationTypeAndTitleFieldData (citation) {\n    return { field: citation.citationType.displayName, content: citation.displayName };\n}\n/* ---------------------------- LOCATION ------------------------------------ */\nfunction getElevRange (location) {\n    return location.elevationMax && location.elevation ? \n        (location.elevation + ' - ' + location.elevationMax) : \n        (location.elevation || location.elevationMax); //Some locations have a max but not the base of the range. Will fix in data soon.\n}\nfunction getCoordinates (location) {\n    return location.latitude ? \n        (location.latitude.toString() + ', ' + location.longitude.toString()) : null;\n}","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","/**\n * App util methods. \n * \n * Exports:\n *     getElem\n *     getDiv\n *     \n * TOC:\n *     ELEMS\n */\nimport * as elems from './elems/elems-main.js';\n\n/* =========================== ELEMS ======================================== */\nexport function getDiv() {  \n    return elems.getDiv(...arguments);\n}\nexport function getElem() {  \n    return elems.getElem(...arguments);\n}\nexport function getLabel () {\n    return elems.getLabel(...arguments);\n}\n\n\nexport function ucfirst(str) { \n    return str.charAt(0).toUpperCase() + str.slice(1); \n}","/**\n * Builds and displays entity-data for the entity's show-page.\n * \n * TOC:\n *     CORE SHOW PAGE BUILDER\n *     HTML BUILDERS\n */                                                                        \nimport * as util from '../util/util-main.js';\nimport getEntityShowData from './entity-show-data.js';\n\ninitShowPage();\n\nfunction initShowPage () {                                          \n    require('../../styles/pages/entity-show.styl');\n    const entity = getEntity($('body').data('this-url'));\n    buildEntityShowPage(entity, $('#entity-show').data('entity'));\n    $('#entity-show').removeAttr('data-entity');\n}\nfunction getEntity (url) {\n    return url.split('/').splice(-2, 1)[0];\n}\n/* ==================== CORE SHOW PAGE BUILDER ============================== */\nfunction buildEntityShowPage (entity, data) {                       /*Perm-log*///console.log('   *//init[%s]ShowPage = %O', entity, data);\n    const confg = getEntityShowData(entity, data, util);\n    const sections = confg.map(buildDataSection);\n    $('#entity-show').append(sections.filter(s => s));\n}\nfunction buildDataSection (confg) {\n    return getDataSect(confg.section, confg.rows.map(getSectionRow).filter(r => r));\n}\nfunction getSectionRow (row, i) {\n    return buildDataRow(++i, row.map(getRowCell).filter(c => c));\n}\nfunction getRowCell (cell) {\n    if (cell.length == 1) { return getDataCell(cell[0]); }\n    return getRowGroupSect(cell.pop(), cell.map(getDataCell).filter(c => c));\n}\nfunction getDataCell (data) {\n    if (!data) { return false; }\n    return buildDataCell(data.field, data.content, data.classes);\n}\n/* ------------------------- HTML BUILDERS ---------------------------------- */\nfunction getDataSect (title, rows) {                                /*dbug-log*///console.log('getDataSect [%s] = [%O]', title, rows);\n    const hdr = util.getElem('h3', { text: title });\n    const id = title.replace(/ /g,'') + '-data-sect';\n    return getDivWithContent(id, 'data-sect', [hdr, ...rows]);\n}\nfunction buildDataRow (cnt, rowCells) {                             /*dbug-log*///console.log('   buildDataRow [%O]', rowCells);\n    return getDivWithContent('sect-row'+cnt, 'sect-row', rowCells);\n}\nfunction getRowGroupSect (dir, colCells) {                          /*dbug-log*///console.log('       getRowGroupSect dir = %s, cells = %O', dir, colCells)\n    const classes = `group-${dir} flex-${dir}`;\n    return getDivWithContent('', classes, colCells);\n}\nfunction buildDataCell (label, fieldHTML, c = '') {                 /*dbug-log*///console.log('           buildDataCell [%s] = [%O]', label, fieldHTML); \n    const lbl = util.getLabel(label+':');\n    const data = getDivWithContent(label+'-data', '', fieldHTML);\n    const classes = 'flex-row cell-data ' + c;\n    return getDivWithContent(label+'-cell', classes, [lbl, data]);\n}\n/* ------------ base ------------------- */\nfunction getDivWithContent (id, classes, content) {                 /*dbug-log*///console.log('               getDivWithContent [%s] = [%O]', classes, content);\n    const div = util.getElem('div', { class: classes, id: id });\n    const html = !!content ? content : '[ NONE ]';\n    $(div).append(html);\n    return div;\n}","/**\n * Html element methods. \n * \n * Exports:\n *     getElem\n *     getDiv\n *     \n * TOC:\n *    GET ELEMS\n *    GET ELEM FULL\n */\n/* --------------------- GET ELEMS ------------------------------------------ */\nexport function getDiv (attrs) {\n    return getElem('div', attrs);\n}\nexport function getLabel (text, attrs = {}) {\n    return getElem('label', Object.assign(attrs, { text: text }));\n}\n/* ------------------------ GET ELEM FULL ----------------------------------- */\nexport function getElem(tag, attrs) {                                           //console.log(\"getElem called. tag = %s. attrs = %O\", tag, attrs);// attr = { id, class, name, type, value, text }\n    const elem = document.createElement(tag);\n    if (attrs) { addAttributes(elem, attrs); }\n    return elem;\n}\nfunction addAttributes(elem, attrs) {\n    addElemProps(elem, attrs);\n    addAttrProps(elem, attrs);\n}\nfunction addElemProps(elem, attrs) {\n    const allProps = [ 'id', 'class', 'title', 'text', 'html'];\n    const transProps = { class: 'className', text: 'textContent', html: 'innerHTML' };\n    allProps.forEach(orgProp => {\n        if (orgProp in attrs) { \n            let prop = (orgProp in transProps) ? transProps[orgProp] : orgProp;\n            elem[prop] = attrs[orgProp]; \n        } \n    });\n}\nfunction addAttrProps(elem, attrs) {\n    const allProps = [ 'name', 'type', 'value', 'placeholder', 'for' ];\n    const attrsToAdd = {};\n    allProps.forEach(prop => {\n       if (prop in attrs) { attrsToAdd[prop] = attrs[prop]; } \n    });                                                                 //console.log(\"attrsToAdd = %O\", attrsToAdd);\n    $(elem).attr(attrsToAdd);\n}"],"sourceRoot":""}